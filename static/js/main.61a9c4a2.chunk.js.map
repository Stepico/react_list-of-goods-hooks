{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","modifiedGoods","goods","visibleGoods","sort","firstGood","secondGood","ALPABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","classNames","onClick","prev","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAqCE,IAAME,EAAM,WACjB,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAmBMC,EA/CD,SACLC,EADK,GAGJ,IADCH,EACF,EADEA,SAAUH,EACZ,EADYA,WAENO,EAAY,YAAOD,GAmBzB,OAjBAC,EAAaC,MAAK,SAACC,EAAWC,GAC5B,OAAQP,GACN,KAAKP,EAASe,QACZ,OAAOF,EAAUG,cAAcF,GAEjC,KAAKd,EAASiB,OACZ,OAAOJ,EAAUK,OAASJ,EAAWI,OAEvC,QACE,OAAO,MAITd,GACFO,EAAaQ,UAGRR,EAwBeS,CACpBnB,EAAiB,CAAEG,aAAYG,aAGjC,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CACE,WAAYhB,IAAaP,EAASe,UAGtCS,QA5Be,WACrBhB,EAAYR,EAASe,UAmBjB,iCAaA,wBACEO,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,WAAYhB,IAAaP,EAASiB,SAGtCO,QArCa,WACnBhB,EAAYR,EAASiB,SA4BjB,4BAaA,wBACEK,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,YAAanB,IAGjBoB,QA1DQ,WACdnB,GAAc,SAACoB,GAAD,OAAWA,MAiDrB,sBAaErB,GAAcG,IAAaP,EAASM,OAEhC,wBACEgB,KAAK,SACLD,UAAU,4BACVG,QAxDA,WACZnB,GAAc,GACdG,EAAYR,EAASM,OAmDX,sBAUR,6BACE,6BACGG,EAAciB,KAAI,SAAAC,GACjB,OACE,oBACE,UAAQ,OADV,SAIGA,GAFIA,cCzIrBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.61a9c4a2.chunk.js","sourcesContent":["import { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((firstGood, secondGood) => {\n    switch (sortType) {\n      case SortType.ALPABET:\n        return firstGood.localeCompare(secondGood);\n\n      case SortType.LENGTH:\n        return firstGood.length - secondGood.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const reverse = () => {\n    setIsReversed((prev) => !prev);\n  };\n\n  const sortByAlphabet = () => {\n    setSortType(SortType.ALPABET);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const reset = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  const modifiedGoods = getReorderedGoods(\n    goodsFromServer, { isReversed, sortType },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            {\n              'is-light': sortType !== SortType.ALPABET,\n            },\n          )}\n          onClick={sortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            {\n              'is-light': sortType !== SortType.LENGTH,\n            },\n          )}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            {\n              'is-light': !isReversed,\n            },\n          )}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {(isReversed || sortType !== SortType.NONE)\n            && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={reset}\n              >\n                Reset\n              </button>\n            )}\n      </div>\n\n      <ul>\n        <ul>\n          {modifiedGoods.map(good => {\n            return (\n              <li\n                data-cy=\"Good\"\n                key={good}\n              >\n                {good}\n              </li>\n            );\n          })}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}